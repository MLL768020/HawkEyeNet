# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv10 object detection model. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 10 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov10n.yaml' will call yolov10.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [ 1.00, 1.00, 512 ]

backbone:
  # [from, repeats, module, args]
  - [ -1, 1, Conv, [ 64, 3, 2 ] ] # 0-P1/2
  - [ -1, 1, Conv, [ 128, 3, 2 ] ] # 1-P2/4
  - [ -1, 3, C2f, [ 128, True ] ]
  - [ -1, 1, Conv, [ 256, 3, 2 ] ] # 3-P3/8
  - [ -1, 6, C2f, [ 256, True ] ]
  - [ -1, 1, SCDown, [ 512, 3, 2 ] ] # 5-P4/16
  - [ -1, 6, C2f, [ 512, True ] ]
  - [ -1, 1, SCDown, [ 1024, 3, 2 ] ] # 7-P5/32
  - [ -1, 3, C2fCIB, [ 1024, True ] ]
  - [ -1, 1, ASPP, [ 1024, 512 ] ] # 9
  - [ -1, 1, PSA, [ 1024 ] ]

# YOLOv10.0n head
head:
  - [ [ 2, 4, 6 ], 1, GradDynFPN,[ 256 ] ]
  - [ [ 4, 6, 9 ], 1, GradDynFPN,[ 256 ] ]

  - [ -2, 3, C2fCIB,[ 256,True ] ]
  - [ -2, 3, C2fCIB,[ 256,True ] ]

  - [ [ 2, 11, 12 ], 1, GradDynFPN, [ 256 ] ]
  - [ [ 11, 12, 9 ], 1, GradDynFPN, [ 256 ] ]
  - [ [ 12, 9, 10 ], 1, GradDynFPN, [ 256 ] ]

  - [ -3, 3, RepC3, [ 256 ] ]
  - [ -3, 3, RepC3, [ 256 ] ]
  - [ -3, 3, RepC3, [ 256 ] ]


  - [ [ 18,19,20 ], 1, RTDETRDecoder, [ nc,256,100,4,2,1 ] ] # Detect(P3, P4, P5)
# 1、尽量探究v10，同时对卷积进行修改魔改，
# 2、使用fpn、loss、sppf变体进行改进
# 3、